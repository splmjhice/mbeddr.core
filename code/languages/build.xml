  <project name="mbeddr download and deploy plugins" default="build-online" >
	
  <property file="build.properties"/>  
  <taskdef name="make-tests" classname="com.mbeddr.tools.ant.MakeTestsTask" classpath="${mbeddr.github.core.home}/tools/ant/tasks/MakeTestsTask.jar" />
  
  <!-- url/mps properties -->
  <property name="plugins.folder.name" value="plugins"/>
  <property name="latest-build" value="status:SUCCESS"/> 
  <property name="branch.spawner" value="branch:master"/> 
  <property name="branch.tables" value="branch:31_EAP1-25"/> 
  <property name="branch.richtext" value="branch:31_EAP"/> 
  <property name="branch.multiline" value="branch:31_EAP"/>
  <property name="branch.math" value="branch:master"/>
  <property name="branch.bool-editor" value="branch:master"/> 
  <property name="server.url" value="http://build.mbeddr.com"/>   
  <property name="server.port" value="80"/>    
  <property name="base-url" value="https://build.mbeddr.com/guestAuth/app/rest/builds"/>

  
  <!-- com.mbeddr.mpsutil -->  
  <property name="com.mbeddr.mpsutil.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.mpsutil/build/artifacts/com.mbeddr.mpsutil.build" />  
  <property name="com.mbeddr.mpsutil.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.mpsutil" />    
  <property name="com.mbeddr.mpsutil.build-file.name" value="build.xml" />  
  <property name="com.mbeddr.mpsutil.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.mpsutil" />  
  
  <!-- com.mbeddr.debugger -->  
  <property name="com.mbeddr.debugger.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.debugger/build/artifacts/com.mbeddr.debugger.build" />  
  <property name="com.mbeddr.debugger.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.debugger" />    
  <property name="com.mbeddr.debugger.main-build-file.name" value="build.xml" />  
  <property name="com.mbeddr.debugger.tests-build-file.name" value="build-tests.xml" />  
  <property name="com.mbeddr.debugger.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.debugger" />  
  
  <!-- com.mbeddr.core -->  
  <property name="com.mbeddr.core.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.core/build/artifacts/com.mbeddr.core.build" />  
  <property name="com.mbeddr.core.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.core" />    
  <property name="com.mbeddr.core.main-build-file.name" value="build.xml" />  
  <property name="com.mbeddr.core.ts-tests-build-file.name" value="build-ts-tests.xml" />  
    <property name="com.mbeddr.core.performance-tests-build-file.name" value="build-performance-tests.xml" />  
  <property name="com.mbeddr.core.ex-tests-build-file.name" value="build-ex-tests.xml" />  
  <property name="com.mbeddr.core.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.core" />  
  
  <!-- com.mbeddr.doc -->  
  <property name="com.mbeddr.doc.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.doc/build/artifacts/com.mbeddr.doc.build" />  
  <property name="com.mbeddr.doc.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.doc" />    
  <property name="com.mbeddr.doc.main-build-file.name" value="build.xml" />  
  <property name="com.mbeddr.doc.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.doc" />  
  
  <!-- com.mbeddr.cc -->  
  <property name="com.mbeddr.cc.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.cc/build/artifacts/com.mbeddr.cc.build" />  
  <property name="com.mbeddr.cc.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.cc" />    
  <property name="com.mbeddr.cc.ple-build-file.name" value="build-ple.xml" />  
  <property name="com.mbeddr.cc.req-build-file.name" value="build-req.xml" />    
  <property name="com.mbeddr.cc.ts-tests-build-file.name" value="build-ts-tests.xml" /> 
  <property name="com.mbeddr.cc.ex-tests-build-file.name" value="build-ex-tests.xml" /> 
  <property name="com.mbeddr.cc.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.cc" />  
  
  <!-- com.mbeddr.debugger.testing -->  
  <property name="com.mbeddr.debugger.testing.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.debugger.testing/build/artifacts/com.mbeddr.debugger.testing.build" />  
  <property name="com.mbeddr.debugger.testing.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.debugger.testing" />     
  <property name="com.mbeddr.debugger.testing.runtime-tests-build-file.name" value="debugger-testing.tests.runtime.xml" /> 
  <property name="com.mbeddr.debugger.testing.runtime-build-file.name" value="debugger-testing.xml" /> 
  <property name="com.mbeddr.debugger.testing.cross-build-file.name" value="debugger.testing.tests.cross.xml" /> 
  <property name="com.mbeddr.debugger.testing.core-tests-build-file.name" value="debugger.testing.tests.core.xml" /> 
  <property name="com.mbeddr.debugger.testing.statemachine-tests-build-file.name" value="debugger.testing.tests.ext.statemachines.xml" /> 
  <property name="com.mbeddr.debugger.testing.physical-units-tests-build-file.name" value="debugger.testing.tests.ext.physical-units.xml" /> 
  <property name="com.mbeddr.debugger.testing.components-tests-build-file.name" value="debugger.testing.tests.ext.components.xml" /> 
  <property name="com.mbeddr.debugger.testing.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.debugger.testing" />  

  <!-- com.mbeddr.ext -->  
  <property name="com.mbeddr.ext.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.ext/build/artifacts/com.mbeddr.ext.build" />  
  <property name="com.mbeddr.ext.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.ext" />     
  <property name="com.mbeddr.ext.components-build-file.name" value="build-components.xml" /> 
  <property name="com.mbeddr.ext.math-build-file.name" value="build-math.xml" /> 
  <property name="com.mbeddr.ext.SmInComp-build-file.name" value="build-SmInComp.xml" /> 
  <property name="com.mbeddr.ext.units-build-file.name" value="build-units.xml" /> 
  <property name="com.mbeddr.ext.statemachine-build-file.name" value="build-statemachine.xml" /> 
  <property name="com.mbeddr.ext.ex-tests-build-file.name" value="build-ex-tests.xml" /> 
  <property name="com.mbeddr.ext.ts-tests-build-file.name" value="build-ts-tests.xml" /> 
  <property name="com.mbeddr.ext.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.ext" />  
  
  <!-- com.mbeddr.analyses -->  
  <property name="com.mbeddr.analyses.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.analyses/build/artifacts/com.mbeddr.analyses.build" />  
  <property name="com.mbeddr.analyses.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.analyses" />     
  <property name="com.mbeddr.analyses.base-build-file.name" value="build-base.xml" /> 
  <property name="com.mbeddr.analyses.cbmc-build-file.name" value="build-cbmc.xml" /> 
  <property name="com.mbeddr.analyses.sat4j-build-file.name" value="build-sat4j.xml" /> 
  <property name="com.mbeddr.analyses.ex-tests-build-file.name" value="build-ex-tests.xml" /> 
  <property name="com.mbeddr.analyses.ts-tests-build-file.name" value="build-ts-tests.xml" /> 
  <property name="com.mbeddr.analyses.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.analyses" />  
  
  <!-- mbeddr.tutorial -->
  <property name="com.mbeddr.tutorial.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.tutorial/build/artifacts/com.mbeddr.tutorial" />  
  <property name="com.mbeddr.tutorial.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.tutorial" />    
  <property name="com.mbeddr.tutorial.languages-build-file.name" value="build-languages.xml" /> 
  <property name="com.mbeddr.tutorial.solutions-build-file.name" value="build-solutions.xml" /> 
  <property name="com.mbeddr.tutorial.tests-build-file.name" value="build-tests.xml" /> 
  <property name="com.mbeddr.tutorial.working-dir" value="${mbeddr.github.core.home}/applications/tutorial" />  
  
  <!-- mbeddr.platform -->
  <property name="com.mbeddr.platform.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.platform/build/artifacts/com.mbeddr.platform" />  
  <property name="com.mbeddr.platform.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.platform" />    
  <property name="com.mbeddr.platform.build-file.name" value="build.xml" /> 
  <property name="com.mbeddr.platform.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.platform" />  
  
  <!-- mbeddr.allScripts -->
  <property name="com.mbeddr.allScripts.build-path.postfix" value="${mbeddr.github.core.home}/build/com.mbeddr.allScripts/build/artifacts/com.mbeddr.allScripts" />  
  <property name="com.mbeddr.allScripts.build-file.location" value="${mbeddr.github.core.home}/build/com.mbeddr.allScripts" />    
  <property name="com.mbeddr.allScripts.build-file.name" value="build.xml" /> 
  <property name="com.mbeddr.allScripts.working-dir" value="${mbeddr.github.core.home}/code/languages/com.mbeddr.allScripts" />  
  
  <!-- boolean editor -->  
  <property name="mps-bool-editor.zip-file.name" value="mps-bool-editor.zip" />
  <property name="mps-bool-editor.expanded-folder.name" value="mps-bool-editor" />
  <property name="mps-bool-editor.build-id" value="buildType:RichtextTables_MpsBooleanEditor" />  
  <property name="mps-bool-editor.build-path" value="${mbeddr.github.core.home}/build/mps-bool-editor/build/artifacts/mps-bool-editor" />  
  <property name="artifacts.mps-bool-editor" value="${mps-bool-editor.build-path}" />

  <!-- math -->  
  <property name="mps-math.zip-file.name" value="mps-math-editor.zip" />
  <property name="mps-math.expanded-folder.name" value="mps-math-editor" />
  <property name="mps-math.build-id" value="buildType:RichtextTables_MpsMath" />  
  <property name="mps-math.build-path" value="${mbeddr.github.core.home}/build/mps-math-editor/build/artifacts/mps-math-editor" />  
  <property name="artifacts.mps-math-editor" value="${mps-math.build-path}" />  
  
  <!-- multiline -->  
  <property name="multiline.zip-file.name" value="mps-multiline.zip" />
  <property name="multiline.expanded-folder.name" value="mps-multiline" />
  <property name="multiline.build-id" value="buildType:RichtextTables_MpsMultiline" />  
  <property name="multiline.build-path" value="${mbeddr.github.core.home}/build/mps-multiline/build/artifacts/mps-multiline" />  
  <property name="artifacts.mps-multiline" value="${multiline.build-path}" />  
    
  <!-- mps-richtext -->  
  <property name="mps-richtext.zip-file.name" value="mps-richtext.zip" />
  <property name="mps-richtext.expanded-folder.name" value="mps-richtext" />
  <property name="mps-richtext.build-id" value="buildType:RichtextTables_MpsRichtext" />
  <property name="mps-richtext.build-path" value="${mbeddr.github.core.home}/build/mps-richtext/build/artifacts/mps-richtext" />  
  <property name="artifacts.mps-richtext" value="${mps-richtext.build-path}" />  
  
  <!-- mps-tables -->
  <property name="mps-tables.zip-file.name" value="mps-tables.zip" />
  <property name="mps-tables.expanded-folder.name" value="mps-tables" />  
  <property name="mps-tables.build-id" value="buildType:RichtextTables_MpsTables" />   
  <property name="mps-tables.build-path" value="${mbeddr.github.core.home}/build/mps-tables/build/artifacts/mps-tables" />  
  <property name="artifacts.mps-tables" value="${mps-tables.build-path}" />  
  
  <!-- spawner -->
  <property name="spawner.suburl" value="com.mbeddr.spawner.build" /> 
  <property name="spawner.zip-file.name" value="com.mbeddr.spawner.zip" />
  <property name="spawner.expanded-folder.name" value="mbeddr.spawner" />
  <property name="spawner.build-id" value="buildType:MbeddrCore_BuildSpawner" />
  <property name="spawner.build-path" value="${mbeddr.github.core.home}/build/com.mbeddr.spawner/build/artifacts/com.mbeddr.spawner.build" />  
  <property name="artifacts.com.mbeddr.spawner.build" value="${spawner.build-path}" />

  
  <!-- misc -->
  <property name="clean-generated-code.task" value="cleanSources" /> 
  <property name="clean-plugins.task" value="clean" /> 
  <property name="generate-code.task" value="generate" /> 
  <property name="build-plugin.task" value="assemble" /> 
  <property name="run-tests.task" value="check" />      
  
  <!-- ivy properties and downlod -->
    <property name="ivy.install.version" value="2.1.0-rc2" />    
     <condition property="ivy.home" value="${env.IVY_HOME}">      
      <isset property="env.IVY_HOME" />
     </condition>    
    <property name="ivy.home" value="${user.home}/.ant" />
    <property name="ivy.jar.dir" value="${ivy.home}/lib" />
    <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
    <target name="download-ivy" unless="offline">
        <mkdir dir="${ivy.jar.dir}"/>
        <!-- download Ivy from web site so that it can be used even without any special installation -->
        <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
              dest="${ivy.jar.file}" usetimestamp="true"/>
    </target>
    <target name="init-ivy" depends="download-ivy">
      <!-- try to load ivy here from ivy home, in case the user has not already dropped
              it into ant's lib dir (note that the latter copy will always take precedence).
              We will not fail as long as local lib dir exists (it may be empty) and
              ivy is in at least one of ant's lib dir or the local lib dir. -->
        <path id="ivy.lib.path">
            <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>


 
  <!-- validations -->
  <fail unless="mps.home">mps.home must be set in your build.properties</fail>
  <fail unless="mbeddr.github.core.home">mbeddr.github.core.home must be set in your build.properties</fail>
  <fail message="Your MPS installation (${mps.home}) doesn't contain a ${plugins.folder.name} folder">
      <condition>
          <not>
              <resourcecount count="1">
				  <dirset dir="${mps.home}" >
					  <include name="${plugins.folder.name}"/>
				  </dirset> 
              </resourcecount>
          </not>
      </condition>
  </fail>
  
  <target name="check-server"> 
    <echo message="trying to reach mbeddr build server" /> 	
	<condition property="server.not.reachable"> 
	   <http url="${server.url}"/> 
	</condition> 	
    <fail message="server is not available, please check your internet connection!" unless="server.not.reachable" /> 
    <echo message="server is available." /> 
  </target> 
  
  <target name="build-online" >
    <antcall target="init-ivy" />
    <antcall target="install-plugins" />
    <antcall target="build-allScripts" />
	<antcall target="clean" />
    <antcall target="build-languages" />		
  </target>
  
  <target name="build-offline" >
    <antcall target="build-allScripts" />
    <antcall target="clean" />
    <antcall target="build-languages" />		
  </target>
    	    	    	     	  
  <target name="install-plugins">
	  <!-- verify server is reachable -->
	  <antcall target="check-server" />
	  
	  <!-- create directory structure -->
	  <mkdir dir="${multiline.build-path}"/>
	  <mkdir dir="${mps-richtext.build-path}"/>
	  <mkdir dir="${mps-tables.build-path}"/>
	  <mkdir dir="${mps-math.build-path}"/>
	  <mkdir dir="${mps-bool-editor.build-path}"/>	  
	  <mkdir dir="${spawner.build-path}"/> 
	  
	  <!-- clean-plugin-folder -->
	  <echo message=""/>
  	  <echo message="DELETING PLUGINS"/>
  	  <echo message=""/>
	  <delete dir="${mps.home}/${plugins.folder.name}/${multiline.expanded-folder.name}" verbose="true" />
	  <delete dir="${mps.home}/${plugins.folder.name}/${mps-richtext.expanded-folder.name}" verbose="true" />
	  <delete dir="${mps.home}/${plugins.folder.name}/${mps-tables.expanded-folder.name}" verbose="true" />
	  <delete dir="${mps.home}/${plugins.folder.name}/${spawner.expanded-folder.name}" verbose="true" />
	  <delete dir="${mps.home}/${plugins.folder.name}/${mps-bool-editor.expanded-folder.name}" verbose="true" />
	  <delete dir="${mps.home}/${plugins.folder.name}/${mps-math.expanded-folder.name}" verbose="true" />
	  
	  
	  <echo message=""/>
  	  <echo message="DELETING ARTIFACTS"/>
  	  <echo message=""/>
	  <delete file="${mps-math.build-path}/${mps-math.zip-file.name}"/>
	  <delete file="${mps-bool-editor.build-path}/${mps-bool-editor.zip-file.name}"/>
	  <delete file="${multiline.build-path}/${multiline.zip-file.name}"/>	  
	  <delete file="${mps-richtext.build-path}/${mps-richtext.zip-file.name}"/>
	  <delete file="${mps-tables.build-path}/${mps-tables.zip-file.name}"/>
	  <delete file="${spawner.build-path}/${spawner.zip-file.name}"/>
	    	  
	  <!-- download-plugins -->	
	  <echo message=""/>
  	  <echo message="DOWNLOADING ARTIFACTS"/>
  	  <echo message=""/>  
	  <get src="${base-url}/${branch.multiline},${multiline.build-id},${latest-build}/artifacts/files/${multiline.zip-file.name}" dest="${multiline.build-path}" verbose="true" skipexisting="true" usetimestamp="true"/>
	  <get src="${base-url}/${branch.richtext},${mps-richtext.build-id},${latest-build}/artifacts/files/${mps-richtext.zip-file.name}" dest="${mps-richtext.build-path}" verbose="true" skipexisting="true" usetimestamp="true"/>
	  <get src="${base-url}/${branch.tables},${mps-tables.build-id},${latest-build}/artifacts/files/${mps-tables.zip-file.name}" dest="${mps-tables.build-path}" verbose="true" skipexisting="true" usetimestamp="true"/>
	  <get src="${base-url}/${branch.math},${mps-bool-editor.build-id},${latest-build}/artifacts/files/${mps-bool-editor.zip-file.name}" dest="${mps-bool-editor.build-path}" verbose="true" skipexisting="true" usetimestamp="true"/>
	  <get src="${base-url}/${branch.bool-editor},${mps-math.build-id},${latest-build}/artifacts/files/${mps-math.zip-file.name}" dest="${mps-math.build-path}" verbose="true" skipexisting="true" usetimestamp="true"/>
	  <get src="${base-url}/${spawner.build-id},${latest-build}/artifacts/files/${spawner.suburl}/${spawner.zip-file.name}" dest="${spawner.build-path}" verbose="true" skipexisting="true" usetimestamp="true"/>	 
	  	 
	  <!-- unzip-plugins -->
	  <echo message=""/>
  	  <echo message="INSTALLING PLUGINS"/>
  	  <echo message=""/>
  	  <unzip src="${mps-math.build-path}/${mps-math.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" />
  	  <unzip src="${mps-bool-editor.build-path}/${mps-bool-editor.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" />
	  <unzip src="${multiline.build-path}/${multiline.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" />
	  <unzip src="${mps-richtext.build-path}/${mps-richtext.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" />
	  <unzip src="${mps-tables.build-path}/${mps-tables.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" />
	  <unzip src="${spawner.build-path}/${spawner.zip-file.name}" dest="${mps.home}/${plugins.folder.name}" overwrite="true" /> 	 	  
  </target>  

  <target name="clean">
  	  <antcall target="clean-languages" />
	  <antcall target="clean-tests" />
	  <antcall target="clean-tutorial" />
	  <echo message=""/>
	  <echo message="Deleting all source_gen, source_gen.caches, classes_gen, test_gen and test_gen.caches directories..."/>
	  <delete includeemptydirs="true">
	  	<fileset dir="." includes="**/source_gen/,**/source_gen.caches/,**/classes_gen/,**/test_gen/,**/test_gen.caches/" defaultexcludes="false"/>
	  </delete>
  	  <echo message="... Done"/>
  </target>	
  
  <target name="clean-tutorial">
	  <ant antfile="${com.mbeddr.tutorial.languages-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.tutorial.languages-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${clean-generated-code.task}" />	 
	  
	  <ant antfile="${com.mbeddr.tutorial.solutions-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.tutorial.solutions-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${clean-generated-code.task}" />	  		  
	  
	  <ant antfile="${com.mbeddr.tutorial.tests-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.tutorial.tests-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${clean-generated-code.task}" />	  		  
  </target>	
  
  <target name="clean-tests">
	  <ant antfile="${com.mbeddr.core.ex-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.core.ex-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${clean-generated-code.task}" />
	  
	  <ant antfile="${com.mbeddr.core.ts-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.core.ts-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${clean-generated-code.task}" />
	  
	  <ant antfile="${com.mbeddr.debugger.tests-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.tests-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${clean-generated-code.task}" />
	  
	  <ant antfile="${com.mbeddr.cc.ts-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.cc.ts-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-generated-code.task}" />	  
	  
	  <ant antfile="${com.mbeddr.cc.ex-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.cc.ex-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-generated-code.task}" />	  
	  
	  <ant antfile="${com.mbeddr.ext.ex-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.ext.ex-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-generated-code.task}" />	 		 
	  
	  <ant antfile="${com.mbeddr.ext.ts-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.ext.ts-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-generated-code.task}" />
	  
	  <ant antfile="${com.mbeddr.analyses.ex-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-plugins.task}" />			   
	  <ant antfile="${com.mbeddr.analyses.ex-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-generated-code.task}" />	 				   
	  
	  <ant antfile="${com.mbeddr.analyses.ts-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-plugins.task}" />			   
	  <ant antfile="${com.mbeddr.analyses.ts-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-generated-code.task}" />	 				   
  </target>	  
  
  <target name="clean-languages">
	  <ant antfile="${com.mbeddr.allScripts.build-file.name}" dir="${com.mbeddr.allScripts.build-file.location}" target="${clean-plugins.task}" />	  
	  <ant antfile="${com.mbeddr.allScripts.build-file.name}" dir="${com.mbeddr.allScripts.build-file.location}" target="${clean-generated-code.task}" />	  
	  
	  <ant antfile="${com.mbeddr.mpsutil.build-file.name}" dir="${com.mbeddr.mpsutil.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.mpsutil.build-file.name}" dir="${com.mbeddr.mpsutil.build-file.location}" target="${clean-generated-code.task}" />	  
	  
	  <ant antfile="${com.mbeddr.debugger.main-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.main-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${clean-generated-code.task}" />
	  
	  <ant antfile="${com.mbeddr.core.main-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.core.main-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${clean-generated-code.task}" />
	  
	  <ant antfile="${com.mbeddr.doc.main-build-file.name}" dir="${com.mbeddr.doc.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.doc.main-build-file.name}" dir="${com.mbeddr.doc.build-file.location}" target="${clean-generated-code.task}" />	
	  
	  <ant antfile="${com.mbeddr.platform.build-file.name}" dir="${com.mbeddr.platform.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.platform.build-file.name}" dir="${com.mbeddr.platform.build-file.location}" target="${clean-generated-code.task}" />	  
	  
	  <ant antfile="${com.mbeddr.ext.units-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.ext.units-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-plugins.task}" />
	  
	  <ant antfile="${com.mbeddr.ext.statemachine-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.ext.statemachine-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-plugins.task}" />
	  
	  <ant antfile="${com.mbeddr.ext.components-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.ext.components-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-plugins.task}" />
	  
	  <ant antfile="${com.mbeddr.ext.math-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.ext.math-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-plugins.task}" />
	  
	  <ant antfile="${com.mbeddr.ext.SmInComp-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.ext.SmInComp-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${clean-plugins.task}" />
	  
	  <ant antfile="${com.mbeddr.cc.ple-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-plugins.task}" />	  
	  <ant antfile="${com.mbeddr.cc.ple-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-generated-code.task}" />	  
	  
	  <ant antfile="${com.mbeddr.cc.req-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.cc.req-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${clean-generated-code.task}" />
	  
	  <ant antfile="${com.mbeddr.analyses.base-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-plugins.task}" />	
	  <ant antfile="${com.mbeddr.analyses.base-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-generated-code.task}" />
	  
	  <ant antfile="${com.mbeddr.analyses.sat4j-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.analyses.sat4j-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-generated-code.task}" />     
	  
	  <ant antfile="${com.mbeddr.analyses.cbmc-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.analyses.cbmc-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${clean-generated-code.task}" />
  </target>    
  
  <target name="build-allScripts">
      <ant antfile="${com.mbeddr.allScripts.build-file.name}" dir="${com.mbeddr.allScripts.build-file.location}" target="${generate-code.task}" />
  </target>
  
  <target name="build-mpsutil">
      <ant antfile="${com.mbeddr.mpsutil.build-file.name}" dir="${com.mbeddr.mpsutil.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.mpsutil.build-file.name}" dir="${com.mbeddr.mpsutil.build-file.location}" target="${build-plugin.task}" />	  
  </target>
  
  <target name="build-debugger">
	  <ant antfile="${com.mbeddr.debugger.main-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.main-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${build-plugin.task}" />
  </target>
  
  <target name="build-core">
      <ant antfile="${com.mbeddr.core.main-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.core.main-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${build-plugin.task}" />	  
  </target>

  <target name="build-doc">  
      <ant antfile="${com.mbeddr.doc.main-build-file.name}" dir="${com.mbeddr.doc.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.doc.main-build-file.name}" dir="${com.mbeddr.doc.build-file.location}" target="${build-plugin.task}" />
  </target>  

  <target name="build-platform">

	  <ant antfile="${com.mbeddr.platform.build-file.name}" dir="${com.mbeddr.platform.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.platform.build-file.name}" dir="${com.mbeddr.platform.build-file.location}" target="${build-plugin.task}" />
  </target>  

  <target name="build-ext.units">
      <ant antfile="${com.mbeddr.ext.units-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.ext.units-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${build-plugin.task}" />
  </target>

  <target name="build-ext.statemachine">
      <ant antfile="${com.mbeddr.ext.statemachine-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.ext.statemachine-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${build-plugin.task}" />
  </target>

  <target name="build-ext.components">
      <ant antfile="${com.mbeddr.ext.components-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.ext.components-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${build-plugin.task}" />
  </target>
  
  <target name="build-ext.math">
      <ant antfile="${com.mbeddr.ext.math-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.ext.math-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${build-plugin.task}" />
  </target>
  <target name="build-ext.SmInComp">
      <ant antfile="${com.mbeddr.ext.SmInComp-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.ext.SmInComp-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${build-plugin.task}" />
  </target>    

  <target name="build-cc.ple">
      <ant antfile="${com.mbeddr.cc.ple-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.cc.ple-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${build-plugin.task}" />	  
  </target>  

    
  <target name="build-cc.req">
      <ant antfile="${com.mbeddr.cc.req-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.cc.req-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${build-plugin.task}" /> 
  </target>    

  <target name="build-analyses.base">
      <ant antfile="${com.mbeddr.analyses.base-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.analyses.base-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${build-plugin.task}" />         
  </target> 
  
  <target name="build-analyses.sat4j">   
      <ant antfile="${com.mbeddr.analyses.sat4j-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.analyses.sat4j-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${build-plugin.task}" />
  </target> 

  <target name="build-analyses.cbmc">
      <ant antfile="${com.mbeddr.analyses.cbmc-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.analyses.cbmc-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${build-plugin.task}" /> 
  </target>     


  <target name="build-languages" >
	  <antcall target="build-mpsutil" />
	  <antcall target="build-debugger" />
	  <antcall target="build-platform" />
	  <antcall target="build-core" />
	  <antcall target="build-doc" />
	  <antcall target="build-ext.components" />	  
      <antcall target="build-ext.units" />	
      <antcall target="build-ext.statemachine" />	
      <antcall target="build-ext.math" />	
      <antcall target="build-ext.SmInComp" />		  		  
	  <antcall target="build-cc.ple" />
	  <antcall target="build-cc.req" />	  
	  <antcall target="build-analyses.base" />	 
	  <antcall target="build-analyses.sat4j" />	 
	  <antcall target="build-analyses.cbmc" />	 	  	  	  
  </target>	 

  <target name="build-and-run-tests" >
	   <antcall target="test-debugger" />
   	   <antcall target="test-core" />
       <antcall target="test-performance" />
   	   <antcall target="test-cc" />
   	   <antcall target="test-ext" />
   	   <antcall target="test-analyses" />
   	   <antcall target="build-tutorial" />	   	   
   	   <antcall target="test-tutorial" />
       <!-- <antcall target="test-debugging" /> -->
  </target>	        
    	  
  <target name="test-debugging">	
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.cross-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.core-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.statemachine-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.physical-units-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.components-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-plugins.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.cross-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.core-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.statemachine-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.physical-units-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-generated-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.components-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${clean-generated-code.task}" />
	   
      <ant antfile="${com.mbeddr.debugger.testing.runtime-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${generate-code.task}" />
      <ant antfile="${com.mbeddr.debugger.testing.runtime-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${build-plugin.task}" /> 	  
	  <ant antfile="${com.mbeddr.debugger.testing.cross-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.cross-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${build-plugin.task}" />	  
	  <ant antfile="${com.mbeddr.debugger.testing.core-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.core-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${build-plugin.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.statemachine-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.statemachine-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${build-plugin.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.physical-units-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.physical-units-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${build-plugin.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.components-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.components-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${build-plugin.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${build-plugin.task}" />		  	
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${run-tests.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.runtime-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${run-tests.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.cross-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${run-tests.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.core-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${run-tests.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.statemachine-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${run-tests.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.physical-units-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${run-tests.task}" />
	  <ant antfile="${com.mbeddr.debugger.testing.components-tests-build-file.name}" dir="${com.mbeddr.debugger.testing.build-file.location}" target="${run-tests.task}" />
  </target>

  <target name="test-core">	  
	  <ant antfile="${com.mbeddr.core.ex-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.core.ex-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${build-plugin.task}" />
	  <antcall target="make-tests">
	      <param name="make-tests.dir" value="${com.mbeddr.core.working-dir}"/>
	  </antcall>
	  
	  <ant antfile="${com.mbeddr.core.ts-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.core.ts-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${build-plugin.task}" />	  
	  <ant antfile="${com.mbeddr.core.ts-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${run-tests.task}" />
  </target>

   <target name="test-performance">    
    <ant antfile="${com.mbeddr.core.performance-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${generate-code.task}" />
    <ant antfile="${com.mbeddr.core.performance-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${build-plugin.task}" />    
    <ant antfile="${com.mbeddr.core.performance-tests-build-file.name}" dir="${com.mbeddr.core.build-file.location}" target="${run-tests.task}" />
  </target>
	  
  <target name="test-debugger">
	  <ant antfile="${com.mbeddr.debugger.tests-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.debugger.tests-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${build-plugin.task}" />
	  <ant antfile="${com.mbeddr.debugger.tests-build-file.name}" dir="${com.mbeddr.debugger.build-file.location}" target="${run-tests.task}" />
  </target>
	
  <target name="test-cc">	  
	  <ant antfile="${com.mbeddr.cc.ts-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.cc.ts-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${build-plugin.task}" />
	  <ant antfile="${com.mbeddr.cc.ts-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${run-tests.task}" />	
	  
	  <ant antfile="${com.mbeddr.cc.ex-tests-build-file.name}" dir="${com.mbeddr.cc.build-file.location}" target="${generate-code.task}" />  
	  <antcall target="make-tests">
	      <param name="make-tests.dir" value="${com.mbeddr.cc.working-dir}"/>
	  </antcall>
  </target>
	  
  <target name="test-ext">				  
	  <ant antfile="${com.mbeddr.ext.ex-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${generate-code.task}" />	 			
	  <ant antfile="${com.mbeddr.ext.ex-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${build-plugin.task}" />	
	  <antcall target="make-tests">
	      <param name="make-tests.dir" value="${com.mbeddr.ext.working-dir}"/>
	  </antcall>
	 		 				  
	  <ant antfile="${com.mbeddr.ext.ts-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${generate-code.task}" />	 			
	  <ant antfile="${com.mbeddr.ext.ts-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${build-plugin.task}" />	  
	  <ant antfile="${com.mbeddr.ext.ts-tests-build-file.name}" dir="${com.mbeddr.ext.build-file.location}" target="${run-tests.task}" />	
  </target>

  <target name="test-analyses">	  
	  <ant antfile="${com.mbeddr.analyses.ex-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${generate-code.task}" />	 	 			   
	  <ant antfile="${com.mbeddr.analyses.ex-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${build-plugin.task}" />	 	  	  
	  <antcall target="make-tests">
	      <param name="make-tests.dir" value="${com.mbeddr.analyses.working-dir}"/>
	  </antcall>

	  <ant antfile="${com.mbeddr.analyses.ts-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${generate-code.task}" />	 	 			   
	  <ant antfile="${com.mbeddr.analyses.ts-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${build-plugin.task}" /> 	 
	  <ant antfile="${com.mbeddr.analyses.ts-tests-build-file.name}" dir="${com.mbeddr.analyses.build-file.location}" target="${run-tests.task}" />	
  </target>
  
  <target name="build-tutorial">	  	   	  	  
	  <ant antfile="${com.mbeddr.tutorial.languages-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.tutorial.languages-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${build-plugin.task}" />
	  
	  <ant antfile="${com.mbeddr.tutorial.solutions-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.tutorial.solutions-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${build-plugin.task}" />
  </target>     
  
  <target name="test-tutorial"  >	  
	  <ant antfile="${com.mbeddr.tutorial.tests-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${generate-code.task}" />
	  <ant antfile="${com.mbeddr.tutorial.tests-build-file.name}" dir="${com.mbeddr.tutorial.build-file.location}" target="${build-plugin.task}" />
  </target>     
  
  <target name="make-tests" description="Run 'make test' for child Makefiles">
	  <echo message="path=${make-tests.dir}"/>
  	  <make-tests workingDirectory="${make-tests.dir}"/>
  </target>
  	  	  
</project>
